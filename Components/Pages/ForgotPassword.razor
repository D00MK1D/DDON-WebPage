@page "/ForgotPassword"
@using System.ComponentModel.DataAnnotations
@using DDON_WebPage.Components.Data
@using Microsoft.EntityFrameworkCore
@using static DDON_WebPage.Components.Data.Models
@inject AppDbContext Pgsql
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<PageTitle>Dragon's Dogma Online</PageTitle>

<MudForm @ref="form" Model="formModel" OnValidSubmit="HandleValidSubmit">
    <MudPaper Class="pa-6 mx-auto" Style="min-width:400px;">
        <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-4">Forgot my password</MudText>

        <MudTextField T="string"
                      Variant="Variant.Outlined"
                      Label="E-mail"
                      Immediate="true"
                      @bind-Value="formModel.Email"
                      For="@(() => formModel.Email)" />
        <br />
        <MudButton OnClick="SendPasswordEmail"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   FullWidth="true">Submit</MudButton>
    </MudPaper>
</MudForm>


@code {
    private MudForm? form;
    ServerApi.ServerResponse? serverResponse;
    private ForgotPasswordModel formModel = new();

    private async Task SendPasswordEmail()
    {
        if (formModel.Email != "")
        {
            try
            {
                await ServerApi.Operation(Pgsql, "reset", "", "", "", formModel.Email, "");

                var user = await Pgsql.account.AsNoTracking().FirstOrDefaultAsync(u => u.Email == formModel.Email);

                if (user is null)
                {
                    Snackbar.Add("If this e-mail exists in our database, it'll receive a message.", Severity.Info);
                    return;
                }
                try
                {
                    Models models = new();
                    await models.SendResetEmail(user.Email, $"{Navigation.BaseUri}NewPassword?token=" + Uri.EscapeDataString(user.PasswordToken));

                    Snackbar.Add("If this e-mail exists in our database, it'll receive a message.", Severity.Info);
                }
                catch
                {
                    Snackbar.Add("If this e-mail exists in our database, it'll receive a message.", Severity.Info);
                }
            }
            catch
            {
                Snackbar.Add(new MarkupString("Something went wrong.<br />Contact server admin."), Severity.Error);
            }
        }
    }
}