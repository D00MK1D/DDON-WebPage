@page "/ForgotPassword"
@using System.ComponentModel.DataAnnotations
@using DDON_WebPage.Components.Data
@using Microsoft.EntityFrameworkCore
@using static DDON_WebPage.Components.Data.Models
@inject AppDbContext Pgsql
@inject NavigationManager Navigation

<PageTitle>Dragon's Dogma Online</PageTitle>

<MudPaper Class="pa-6 mx-auto" Style="max-width:400px;">
    <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-4">Esqueci Minha Senha</MudText>

        <MudTextField T="string" Variant="Variant.Outlined" Label="Digite seu Email" @bind-Value="formModel.Email" Required="true" />
        <MudButton OnClick="SendPasswordEmail" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">Enviar Senha</MudButton>

    @if (!string.IsNullOrEmpty(resultMessage))
    {
        <MudText Class="mt-4" Color="Color.Info">@resultMessage</MudText>
    }
</MudPaper>

@code {
    private ForgotPasswordModel formModel = new();
    private string resultMessage;



    private async Task SendPasswordEmail()
    {
        var user = await Pgsql.account.FirstOrDefaultAsync(u => u.Email == formModel.Email);

        if (user is null)
        {
            resultMessage = "Nenhuma conta encontrada com este email.";
            return;
        }

        try
        {
            Models models = new();
            await models.SendResetEmail(user.Email, "https://localhost:7155/NewPassword?token="+user.EmailToken);
            resultMessage = "If this e-mail exists in our database, it'll receive a message.";
        }
        catch
        {
            resultMessage = $"If this e-mail exists in our database, it'll receive a message.";
        }
    }


}