@page "/ForgotPassword"
@using System.ComponentModel.DataAnnotations
@using DDON_WebPage.Components.Data
@using Microsoft.EntityFrameworkCore
@inject AppDbContext Pgsql
@inject NavigationManager Navigation

<MudPaper Class="pa-6 mx-auto" Style="max-width:400px;">
    <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-4">Esqueci Minha Senha</MudText>

        <MudTextField T="string" Variant="Variant.Outlined" Label="Digite seu Email" @bind-Value="formModel.Email" Required="true" />
        <MudButton OnClick="SendPasswordEmail" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">Enviar Senha</MudButton>

    @if (!string.IsNullOrEmpty(resultMessage))
    {
        <MudText Class="mt-4" Color="Color.Info">@resultMessage</MudText>
    }
</MudPaper>

@code {
    private ForgotPasswordModel formModel = new();
    private string resultMessage;

    public class ForgotPasswordModel
    {
        [Required(ErrorMessage = "Informe seu email")]
        [EmailAddress(ErrorMessage = "Email inválido")]
        public string Email { get; set; } = string.Empty;
    }

    private async Task SendPasswordEmail()
    {
        var user = await Pgsql.account.FirstOrDefaultAsync(u => u.Email == formModel.Email);

        if (user is null)
        {
            resultMessage = "Nenhuma conta encontrada com este email.";
            return;
        }

        try
        {
            await SendEmailAsync(user.Email, "Recuperação de Senha", $"Your recuperation code is: {user.Password}");
            resultMessage = "If this e-mail exists in our database, it'll receive a message.";
        }
        catch (Exception ex)
        {
            resultMessage = $"Problem occurred, contact the admin.";
        }
    }

    private async Task SendEmailAsync(string toEmail, string subject, string body)
    {
        using var client = new MailKit.Net.Smtp.SmtpClient();

        string smtpServer = "smtp.mail.com";
        string smtpUser = "some@mail.com";
        string smtpPass = "somePassword";

        var message = new MimeKit.MimeMessage();
        message.From.Add(new MimeKit.MailboxAddress("DDON App", smtpUser));
        message.To.Add(MimeKit.MailboxAddress.Parse(toEmail));
        message.Subject = subject;
        message.Body = new MimeKit.TextPart("plain") { Text = body };

        await client.ConnectAsync(smtpServer, 587, MailKit.Security.SecureSocketOptions.StartTls);
        await client.AuthenticateAsync(smtpUser, smtpPass);
        await client.SendAsync(message);
        await client.DisconnectAsync(true);
    }
}