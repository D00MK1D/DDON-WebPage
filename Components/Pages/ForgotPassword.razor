@page "/ForgotPassword"
@using System.ComponentModel.DataAnnotations
@using DDON_WebPage.Components.Data
@using Microsoft.EntityFrameworkCore
@using static DDON_WebPage.Components.Data.Models
@inject AppDbContext Pgsql
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<PageTitle>Dragon's Dogma Online</PageTitle>

<MudPaper Class="pa-6 mx-auto" Style="max-width:400px;">
    <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-4">Forgot my password</MudText>

        <MudTextField T="string" Variant="Variant.Outlined" Label="E-mail" @bind-Value="formModel.Email" Required="true" />
        <br />
        <MudButton OnClick="SendPasswordEmail" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">Submit</MudButton>

</MudPaper>

@code {
    private ForgotPasswordModel formModel = new();

    private async Task SendPasswordEmail()
    {
        if(formModel.Email != "")
        {
            try
            {
                var user = await Pgsql.account.FirstOrDefaultAsync(u => u.Email == formModel.Email);

                if (user is null)
                {
                    Snackbar.Add("If this e-mail exists in our database, it'll receive a message.", Severity.Info);
                    return;
                }

                try
                {
                    Models models = new();
                    await models.SendResetEmail(user.Email, "https://localhost:7155/NewPassword?token=" + Uri.EscapeDataString(user.Password));

                    Snackbar.Add("If this e-mail exists in our database, it'll receive a message.", Severity.Info);
                }
                catch
                {
                    Snackbar.Add("If this e-mail exists in our database, it'll receive a message.", Severity.Info);
                }
            }
            catch
            {
                Snackbar.Add("Something went wrong. \n Contact the administration.", Severity.Error);
            }
        }
        
    }


}